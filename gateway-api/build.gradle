plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.13.0'
    id 'maven-publish'
}

group = 'org.template'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/src/main/java"
        }
    }
}

dependencies {
    // OpenAPI Generator plugin
    implementation 'org.openapitools:openapi-generator-gradle-plugin:6.4.0'
    implementation "org.springframework.boot:spring-boot-starter-web:3.0.4"
    implementation "org.openapitools:jackson-databind-nullable:0.2.6"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:2.5.0"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0"
    implementation "org.springdoc:springdoc-openapi-starter-common:2.5.0"
}


openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/openapi/openapi-specification.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "${group}.gateway.api"
    modelPackage = "${group}.gateway.api.dto"
    configOptions = [
            dateLibrary: "java17",
            interfaceOnly: "true",
            useSpringBoot3: "true",
            useTags: "true",
            openApiNullable: "false",
            skipDefaultInterface: "true",
            documentationProvider: "none",
            useSpringController: "false",
            useBeanValidation: "false",
            annotationLibrary: "swagger2"
    ]
    typeMappings = [
            "string+binary": "StreamingResponseBody",
            "integer": "Long",
            "int": "Long"
    ]
    importMappings = [
            'StreamingResponseBody': 'org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody'
    ]
    globalProperties = [
            modelDocs: "false",
            generateSupportingFiles: "true",
            apis: "",
            models: ""
    ]
}

compileJava.dependsOn tasks.named("openApiGenerate")
tasks.register('cleanGenerated') {
    doLast {
        delete "$buildDir/generated"
    }
}

tasks.build.finalizedBy(publishToMavenLocal)

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'gateway-api'
            from components.java
        }
    }
}