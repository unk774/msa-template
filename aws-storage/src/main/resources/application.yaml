server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-exception: true

spring:
  application:
    name: ${APP_NAME:aws_storage}
  tomcat:
    threads:
      max: 300
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_SERVER_URL:http://keycloak:8880}/realms/${AUTH_SERVER_REALM:image-processing}
          jwk-set-uri:  ${AUTH_SERVER_URL:http://keycloak:8880}/realms/${AUTH_SERVER_REALM:image-processing}/protocol/openid-connect/certs
  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USERNAME:admin}
    password: ${RABBIT_PASSWORD:password}
  cloud:
    stream:
      bindings:
        # Define an output channel (producer)
        upload-out-0:
          destination: upload-exchange
          binder: rabbit
  servlet:
    multipart:
      max-file-size: 1GB
      max-request-size: 1GB

keycloak:
  auth-server-url: ${AUTH_SERVER_URL:http://keycloak:8880}
  realm: ${AUTH_SERVER_REALM:image-processing}
  client-id: ${AUTH_SERVER_CLIENT_ID:image-processing-admin}
  client-secret: ${AUTH_SERVER_CLIENT_SECRET:kqDoa2+jTLpdO5Ab4yqAAqrcDN7AvMXe}

s3:
  access:
    key: ${S3_ACCESS_KEY:admin}
  secret:
    key: ${S3_SECRET_KEY:admin123}
  service:
    endpoint: ${S3_ENDPOINT:http://localhost:9000}
  signing:
    region: ${S3_REGION:us-east-1}
  forcePathStyle: ${S3_PATH_STYLE:true}
  store-bucket: ${S3_STORE_BUCKET:store}

springdoc:
  api-docs:
    path: /api-docs/store/v3/api-docs
  swagger-ui:
    path: /api-docs/store/swagger-ui
    display-request-duration: true
    disable-swagger-default-url: true
    urls:
      - name: store
        url: ${API_URL:http://localhost:8080}/api-docs/store/v3/api-docs
    urls-primary-name: store
    url:  ${PUBLIC_URL:http://localhost:8080}/
  show-actuator: false
  enable-groovy: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,loggers,prometheus
  endpoint:
    health:
      show-details: ALWAYS
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true